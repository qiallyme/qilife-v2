import os
import time
import re # Not strictly needed for the simplified escaping, but good practice

# ---- Configuration ----
# IMPORTANT: Use AutoHotkey's Window Spy tool (comes with AHK installation)
# to find the correct Title and/or Class for your Notion window.
# Examples: "ahk_class Notion" , "My Notion Page - Notion", "Notion"
# Using ahk_class is often more reliable than the title.
NOTION_WINDOW_TITLE = "ahk_exe Notion.exe" # <<< ADJUST THIS! (Updated based on your Window Spy output)

# ---- Hardcoded clicks (Still fragile!) ----
# These coordinates are absolute screen coordinates.
# Consider using AHK's ImageSearch for more robustness if coordinates fail.
click_sequence = [
    (522, 1066), # Click: somewhere to ensure Notion has focus (or initial activation)
    (62, 813),   # Click: Trash can
    (391, 569),  # Click: Search button within Trash
    (410, 601),  # Click: Search box (ready to type here)
]

# Clicks specifically for delete actions within Trash view
delete_click = (550, 612)    # Delete page permanently button (example coordinate)
confirm_click = (959, 530)   # Confirm delete button (example coordinate)

# ---- Function to escape AHK special characters ----
def escape_ahk_special_chars(text):
    """Escapes characters that have special meaning in AHK Send commands,
       focusing on {} needed even for SendInput."""
    # SendInput treats most !^+# literally, but {} still denote keys/special actions.
    text = text.replace('{', '{{}')
    text = text.replace('}', '{}}')
    # Add more replacements here if needed for other Send modes or rare cases
    return text

# ---- Ask for the dynamic page name ----
page_name = input("Enter the exact parent page name to search for in Notion Trash: ").strip()
if not page_name:
    print("Error: Page name cannot be empty.")
    exit()

# ---- Ask how many delete-confirm iterations ----
while True:
    try:
        delete_repeats_str = input(f"How many times to repeat the delete '{page_name}' -> confirm sequence? ")
        delete_repeats = int(delete_repeats_str)
        if delete_repeats > 0:
            break
        else:
            print("Please enter a positive number.")
    except ValueError:
        print("Invalid input. Please enter a whole number.")

# ---- Where to save the AHK script ----
output_file = os.path.join(os.getcwd(), 'generated_improved_notion_delete.ahk')

# ---- Write the AHK script ----
print("\nGenerating AHK script...")
try:
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(f"; Auto-generated AHK Script - {time.strftime('%Y-%m-%d %H:%M:%S')}\n")
        f.write(f"; Target Page Name in Trash: {page_name}\n")
        f.write(f"; Delete Repetitions: {delete_repeats}\n")
        f.write("; --- Generated by Python Script ---\n\n")

        # --- Basic AHK Setup ---
        f.write("; If script requires admin privileges, uncomment the line below\n")
        f.write("; if not A_IsAdmin\n")
        f.write("; {\n")
        f.write(";    Run *RunAs %A_ScriptFullPath%\n")
        f.write(";    ExitApp\n")
        f.write("; }\n\n")
        f.write("; Ensure script directory is working directory (usually good practice)\n")
        f.write("SetWorkingDir, %A_ScriptDir%\n\n")
        f.write("; Set coordinate mode relative to the Screen (important for absolute coordinates)\n")
        f.write("CoordMode, Pixel, Screen\n")
        f.write("CoordMode, Mouse, Screen\n\n")

        # --- Activate Notion Window ---
        f.write("; --- Activate Notion Window ---\n")
        f.write(f"; IMPORTANT: Ensure '{NOTION_WINDOW_TITLE}' correctly identifies your Notion window!\n")
        f.write(f"; Use AHK Window Spy if unsure.\n")
        f.write(f"WinWaitActive, {NOTION_WINDOW_TITLE},, 10 ; Wait up to 10 seconds\n")
        f.write("if (ErrorLevel) {\n") # Check if WinWait timed out
        f.write(f"    MsgBox, 16, Error, Notion window ({NOTION_WINDOW_TITLE}) not found or couldn't be activated within 10 seconds. Script will exit.\n")
        f.write("    ExitApp\n")
        f.write("}\n")
        f.write(f"WinActivate, {NOTION_WINDOW_TITLE} ; Ensure it's the foremost window\n")
        f.write("Sleep, 500 ; Give window time to fully focus\n\n")

        # --- Navigation Clicks ---
        f.write("; --- Begin Navigation to Search in Trash ---\n")
        for idx, (x, y) in enumerate(click_sequence):
            comment = f"; Action {idx + 1}: Click {'initial activation/focus' if idx == 0 else ('Trash Can' if idx == 1 else ('Search Button' if idx == 2 else 'Search Box'))}"
            f.write(f"Click, {x}, {y} {comment}\n")
            # Add a slightly longer delay before typing into search
            sleep_time = 800 if idx == 3 else 400 # Increased sleep before typing
            f.write(f"Sleep, {sleep_time}\n")

            if idx == 3: # After clicking into search box
                escaped_page_name = escape_ahk_special_chars(page_name)
                f.write(f"; Sending search term: '{page_name}' (Escaped for AHK: '{escaped_page_name}')\n")
                # Use SendInput for better reliability
                f.write(f"SendInput, {escaped_page_name}\n")
                f.write("Sleep, 500 ; Wait briefly after typing name\n")
                f.write("SendInput, {Enter} ; Simulate pressing Enter to search\n")
                # Increased sleep after Enter to allow search results to load
                f.write("Sleep, 2000 ; Wait for search results/page to load (ADJUST THIS if needed)\n")
        f.write("; --- End Navigation ---\n\n")

        # --- Delete-Confirm Loop ---
        f.write("; --- Start Delete-Confirm Loop ---\n")
        f.write(f"Loop, {delete_repeats}\n")
        f.write("{\n")
        f.write("    ; Make sure Notion is still active before each loop iteration (optional but safer)\n")
        f.write(f"    WinActivate, {NOTION_WINDOW_TITLE}\n")
        f.write("    Sleep, 200\n\n")
        f.write(f"    ; Click the 'Delete permanently' button (coordinates: {delete_click})\n")
        f.write(f"    Click, {delete_click[0]}, {delete_click[1]}\n")
        # Increased sleep after delete click
        f.write("    Sleep, 600 ; Wait for confirm dialog (ADJUST THIS if needed)\n\n")
        f.write(f"    ; Click the 'Confirm' button (coordinates: {confirm_click})\n")
        f.write(f"    Click, {confirm_click[0]}, {confirm_click[1]}\n")
        # Increased sleep after confirm to allow delete action to process
        f.write("    Sleep, 1500 ; Wait after confirm (ADJUST THIS if needed)\n")
        f.write("}\n")
        f.write("; --- End delete-confirm loop ---\n\n")

        f.write("; --- Script Finished ---\n")
        f.write(f"MsgBox, 64, Automation Finished, The script has completed {delete_repeats} delete attempts for '{page_name}'.\n")
        f.write("ExitApp\n")

    print(f"\nImproved AHK script saved successfully to {output_file}!")
    print("\nIMPORTANT NOTES:")
    print(f"1. Make sure the `NOTION_WINDOW_TITLE` ('{NOTION_WINDOW_TITLE}') in the *Python script* is correct for your system.")
    print("   Use AutoHotkey's Window Spy tool to find the right Title or Class.")
    print("2. This script still relies on HARDCODED screen coordinates. If your Notion window size, position, screen resolution, or the Notion UI changes, the script WILL likely fail.")
    print("3. The `Sleep` timings in the AHK script might need adjustment based on your computer's speed and Notion's responsiveness.")
    print("4. Run the generated `.ahk` file using your AutoHotkey installation.")

except IOError as e:
    print(f"\nError writing file: {e}")
except Exception as e:
    print(f"\nAn unexpected error occurred: {e}")